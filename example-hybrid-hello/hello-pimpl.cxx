// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "hello-pimpl.hxx"

#include <xsde/cxx/parser/validating/string-common.hxx>

// hello_pimpl
//

hello_pimpl::
hello_pimpl (bool b)
{
  this->hello_pimpl_base_ = b;
  this->hello_pimpl_state_.hello_ = 0;
}

hello_pimpl::
~hello_pimpl ()
{
  if (!this->hello_pimpl_base_ && this->hello_pimpl_state_.hello_)
    delete this->hello_pimpl_state_.hello_;
}

void hello_pimpl::
_reset ()
{
  hello_pskel::_reset ();

  if (!this->hello_pimpl_base_ && this->hello_pimpl_state_.hello_)
  {
    delete this->hello_pimpl_state_.hello_;
    this->hello_pimpl_state_.hello_ = 0;
  }
}

void hello_pimpl::
pre_impl (::hello* x)
{
  this->hello_pimpl_state_.hello_ = x;
}

void hello_pimpl::
pre ()
{
  ::hello* x = new ::hello;
  this->pre_impl (x);
}

void hello_pimpl::
greeting (const ::std::string& x)
{
  this->hello_pimpl_state_.hello_->greeting (x);
}

void hello_pimpl::
name (const ::std::string& x)
{
  this->hello_pimpl_state_.hello_->name ().push_back (x);
}

::hello* hello_pimpl::
post_hello ()
{
  ::hello* r = this->hello_pimpl_state_.hello_;
  this->hello_pimpl_state_.hello_ = 0;
  return r;
}

// hello_paggr
//

hello_paggr::
hello_paggr ()
{
  this->hello_p_.parsers (this->string_p_,
                          this->string_p_);
}

const char* hello_paggr::
root_name ()
{
  return "hello";
}

const char* hello_paggr::
root_namespace ()
{
  return "";
}

// Begin epilogue.
//
//
// End epilogue.

